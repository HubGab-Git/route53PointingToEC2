AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Example template for Route53 domain pointing to EC2
Parameters:
  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: /aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: 'AWS::EC2::KeyPair::KeyName'
    Default: 'web'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  InstanceType:
    Description: WebServer EC2 instance type
    Default: t2.micro
    Type: String
  HostedZoneID:
    Description: "The ID of the Route53 hosted zone to use for the DNS record with dot in the end"
    Type: String
  HostedZoneName:
    Description: "The name of the Route53 hosted zone to use for the DNS record"
    Type: String

Resources:

  EC2SecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Security group for the EC2 instance"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: "22"
          ToPort: "22"
          CidrIp: "0.0.0.0/0"
        - IpProtocol: tcp
          FromPort: "80"
          ToPort: "80"
          CidrIp: "0.0.0.0/0"
  
  WebServerInstance:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: !Ref LatestAmiId
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SecurityGroupIds: 
        - !Ref EC2SecurityGroup
      UserData: !Base64 |
        #!/bin/bash
        sudo dnf install -y httpd
        sudo systemctl start httpd

  DNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneID
      Name: !Ref HostedZoneName
      Type: A
      TTL: "300"
      ResourceRecords:
        - !GetAtt WebServerInstance.PublicIp
  
Outputs:
  WebsiteURL:
    Description: URL for newly created EC2
    Value: !Ref DNSRecord